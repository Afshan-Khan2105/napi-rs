window.BENCHMARK_DATA = {
  lastUpdate: 1642496496760,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '1b0b075b485c7744fd7c269be6869c9a2e726781',
          message: 'build: install lerna in Docker images',
          timestamp: '2022-01-18T16:48:29+08:00',
          tree_id: 'f68d3f30f8c89a5d7c7b069508a7e79d444289a2',
          url: 'https://github.com/napi-rs/napi-rs/commit/1b0b075b485c7744fd7c269be6869c9a2e726781',
        },
        date: 1642496494651,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 45390920,
            range: '±0.25%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 590792448,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 14835448,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 588831645,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 314927,
            range: '±9.61%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1450365,
            range: '±5.24%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 31444,
            range: '±0.06%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6337,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6300,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13623,
            range: '±0.57%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8209,
            range: '±0.89%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 9982,
            range: '±0.53%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 355918,
            range: '±5.28%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 305608,
            range: '±5.45%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 320229,
            range: '±5.18%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 285773,
            range: '±5.26%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 29689,
            range: '±1.48%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 357,
            range: '±3.52%',
            unit: 'ops/sec',
            extra: '56 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 23293,
            range: '±1.18%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1739,
            range: '±1.74%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Query#query * 1',
            value: 23483,
            range: '±1.42%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
        ],
      },
    ],
  },
}
