window.BENCHMARK_DATA = {
  lastUpdate: 1639808473679,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'forehalo@gmail.com',
            name: 'yiliuliuyi',
            username: 'forehalo',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '5b83de8a485203335aaa73cf5544a083220d918a',
          message:
            'Merge pull request #940 from napi-rs/fix-return-type\n\nfix(napi-derive-backend): Null and Undefined return type',
          timestamp: '2021-12-18T14:13:37+08:00',
          tree_id: '295893a3da8ceec87ad08967c84f3d3930425f96',
          url: 'https://github.com/napi-rs/napi-rs/commit/5b83de8a485203335aaa73cf5544a083220d918a',
        },
        date: 1639808471898,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54481873,
            range: '±0.46%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 712894021,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18694705,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 710971568,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 351039,
            range: '±9.79%',
            unit: 'ops/sec',
            extra: '52 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1745962,
            range: '±3.44%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 38625,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7896,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7822,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16435,
            range: '±0.63%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10602,
            range: '±0.06%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12488,
            range: '±0.04%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 389217,
            range: '±5.85%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 335182,
            range: '±5.53%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 355114,
            range: '±5.48%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 313043,
            range: '±5.78%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 37134,
            range: '±1.99%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 421,
            range: '±3.56%',
            unit: 'ops/sec',
            extra: '47 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29153,
            range: '±0.81%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2163,
            range: '±1.59%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29761,
            range: '±2.32%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
        ],
      },
    ],
  },
}
