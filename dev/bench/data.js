window.BENCHMARK_DATA = {
  lastUpdate: 1637031014625,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '052bcd8f3efe75a9a10f4b4f36d4dda1f7d71f68',
          message:
            'Release independent packages\n\nnapi@2.0.0-alpha.3\nnapi-derive-backend@1.0.5\nnapi-derive@2.0.0-alpha.4\n\nGenerated by cargo-workspaces',
          timestamp: '2021-11-16T10:44:48+08:00',
          tree_id: '2d80954b9fb0a86c89da0a3fcae5228308a2605f',
          url: 'https://github.com/napi-rs/napi-rs/commit/052bcd8f3efe75a9a10f4b4f36d4dda1f7d71f68',
        },
        date: 1637031013441,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 62549759,
            range: '±0.22%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 809883212,
            range: '±0.18%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 20646446,
            range: '±0.18%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 808623975,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 369691,
            range: '±10.4%',
            unit: 'ops/sec',
            extra: '56 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2077051,
            range: '±4.94%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 40807,
            range: '±0.28%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 8942,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 8924,
            range: '±0.51%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 19353,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 11684,
            range: '±0.05%',
            unit: 'ops/sec',
            extra: '100 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 14338,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 448089,
            range: '±5.55%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 359647,
            range: '±5.36%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 373827,
            range: '±5.2%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 345207,
            range: '±5.5%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 39467,
            range: '±1.29%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 322,
            range: '±3.55%',
            unit: 'ops/sec',
            extra: '56 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 30215,
            range: '±0.48%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2070,
            range: '±2.4%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29994,
            range: '±2.07%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
