window.BENCHMARK_DATA = {
  lastUpdate: 1644554573634,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: 'c18fb10f136f363decfa2b550340e022326e0acc',
          message: 'chore: publish\n\n - @napi-rs/cli@2.4.4',
          timestamp: '2022-02-11T12:38:16+08:00',
          tree_id: '7c71b2eee6f3e02277da2fc46fb41ad483b6d0ed',
          url: 'https://github.com/napi-rs/napi-rs/commit/c18fb10f136f363decfa2b550340e022326e0acc',
        },
        date: 1644554571893,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 55910389,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 713590971,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 16889244,
            range: '±0.61%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 711274382,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 374919,
            range: '±8.85%',
            unit: 'ops/sec',
            extra: '64 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2014692,
            range: '±4.18%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 36337,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7248,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7277,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16580,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10103,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11992,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 394779,
            range: '±4.87%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 339732,
            range: '±4.94%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 349169,
            range: '±4.61%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 317020,
            range: '±4.87%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 38368,
            range: '±2.05%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 410,
            range: '±2.69%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29552,
            range: '±0.6%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2152,
            range: '±0.37%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 30084,
            range: '±2.37%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
