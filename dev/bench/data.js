window.BENCHMARK_DATA = {
  lastUpdate: 1637057332228,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '6bfaaebadc66511bdc58fb23ea684a110a5a1a63',
          message:
            'Release independent packages\n\nnapi@2.0.0-alpha.4\n\nGenerated by cargo-workspaces',
          timestamp: '2021-11-16T17:58:03+08:00',
          tree_id: 'c54c75227c52285ad9613ae866ac02d069071460',
          url: 'https://github.com/napi-rs/napi-rs/commit/6bfaaebadc66511bdc58fb23ea684a110a5a1a63',
        },
        date: 1637057330537,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 55143643,
            range: '±0.17%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 714298834,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 12377903,
            range: '±13.78%',
            unit: 'ops/sec',
            extra: '67 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 667182438,
            range: '±7.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 362210,
            range: '±10.6%',
            unit: 'ops/sec',
            extra: '59 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2161427,
            range: '±6.4%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 35247,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7988,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7840,
            range: '±0.62%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 17346,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10134,
            range: '±0.02%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12695,
            range: '±0.04%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 403957,
            range: '±4.92%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 347930,
            range: '±5.03%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 360601,
            range: '±4.58%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 321741,
            range: '±5.43%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 38304,
            range: '±2.43%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 395,
            range: '±3.95%',
            unit: 'ops/sec',
            extra: '48 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 28113,
            range: '±1.37%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1653,
            range: '±12.71%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29701,
            range: '±3.75%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
        ],
      },
    ],
  },
}
