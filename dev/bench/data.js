window.BENCHMARK_DATA = {
  lastUpdate: 1642394553261,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'tim@timfish.uk',
            name: 'Tim Fish',
            username: 'timfish',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'cdcab888eea7e8f5375bf4ebd7e26806033ca252',
          message:
            'fix(napi-derive): correctly escape backslash in type definition doc comments (#1034)',
          timestamp: '2022-01-17T12:38:16+08:00',
          tree_id: '982c85b83f974499dab8e3ace5ee1449f49bf45a',
          url: 'https://github.com/napi-rs/napi-rs/commit/cdcab888eea7e8f5375bf4ebd7e26806033ca252',
        },
        date: 1642394552107,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 56349110,
            range: '±0.33%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 713411110,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18560445,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 711320223,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 367881,
            range: '±8.66%',
            unit: 'ops/sec',
            extra: '63 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1744818,
            range: '±4.16%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 37514,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7512,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7399,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16581,
            range: '±0.67%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10007,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12054,
            range: '±0.25%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 412919,
            range: '±4.87%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 359459,
            range: '±4.79%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 377907,
            range: '±4.52%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 342078,
            range: '±4.66%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 39375,
            range: '±1.09%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 420,
            range: '±3.35%',
            unit: 'ops/sec',
            extra: '47 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29150,
            range: '±0.43%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2095,
            range: '±1.2%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 30277,
            range: '±0.5%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
        ],
      },
    ],
  },
}
