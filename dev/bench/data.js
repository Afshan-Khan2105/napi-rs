window.BENCHMARK_DATA = {
  lastUpdate: 1637484576082,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '6cd91b23d71772f4578b456d0550564573561622',
          message:
            'Merge pull request #868 from napi-rs/external\n\nfeat(napi): implement external value',
          timestamp: '2021-11-21T16:45:31+08:00',
          tree_id: '855c52ec3df2b0e7fc909842a45acf726be0fd1d',
          url: 'https://github.com/napi-rs/napi-rs/commit/6cd91b23d71772f4578b456d0550564573561622',
        },
        date: 1637484574873,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 61036105,
            range: '±0.23%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 718378879,
            range: '±0.54%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18219953,
            range: '±0.57%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 711709737,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 356728,
            range: '±9.28%',
            unit: 'ops/sec',
            extra: '56 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1753174,
            range: '±1.49%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 40834,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7710,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7716,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16473,
            range: '±0.75%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10580,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 13156,
            range: '±0.32%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 387934,
            range: '±5.35%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 347038,
            range: '±5.16%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 352694,
            range: '±5.02%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 329992,
            range: '±5.28%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 37749,
            range: '±1.7%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 421,
            range: '±2.94%',
            unit: 'ops/sec',
            extra: '46 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 28731,
            range: '±0.42%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1833,
            range: '±10.14%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Query#query * 1',
            value: 28067,
            range: '±3.91%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
        ],
      },
    ],
  },
}
