window.BENCHMARK_DATA = {
  lastUpdate: 1647177458304,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '77a88cb44ab3c5eb0eda27565ef6f7ee7e277042',
          message:
            'Merge pull request #1095 from napi-rs/cc-wrapper-arg\n\nfix(cli): use shell file path instead of commands for zig CC and CXX',
          timestamp: '2022-03-13T21:10:15+08:00',
          tree_id: 'f3d335cc4e9634a0a0e56a08116091be3f4c0125',
          url: 'https://github.com/napi-rs/napi-rs/commit/77a88cb44ab3c5eb0eda27565ef6f7ee7e277042',
        },
        date: 1647177457171,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 55875170,
            range: '±0.26%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 713012060,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 17904066,
            range: '±0.73%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 709738502,
            range: '±0.29%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 351846,
            range: '±9.93%',
            unit: 'ops/sec',
            extra: '63 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1690983,
            range: '±4.37%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 36049,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7492,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7412,
            range: '±0.29%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16870,
            range: '±0.25%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10088,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11873,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 393958,
            range: '±5.43%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 338893,
            range: '±5.68%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 349783,
            range: '±5.35%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 321741,
            range: '±5.33%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 37679,
            range: '±1.95%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 412,
            range: '±2.11%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29679,
            range: '±0.54%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2152,
            range: '±1.92%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29699,
            range: '±2.09%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
