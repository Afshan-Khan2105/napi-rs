window.BENCHMARK_DATA = {
  lastUpdate: 1640354935277,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '4e4b160f3acca152102f2a7af05145649561ca01',
          message: 'Release independent packages\n\nnapi-derive@2.0.3',
          timestamp: '2021-12-24T21:57:40+08:00',
          tree_id: '999b8cca266a0acbcbaf0bc992e5da1f2b9cbff9',
          url: 'https://github.com/napi-rs/napi-rs/commit/4e4b160f3acca152102f2a7af05145649561ca01',
        },
        date: 1640354934072,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 46230700,
            range: '±1.71%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 760228596,
            range: '±1.42%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 16492739,
            range: '±1.12%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 756836648,
            range: '±1.43%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 298080,
            range: '±9.82%',
            unit: 'ops/sec',
            extra: '60 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1416041,
            range: '±6.13%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 36050,
            range: '±1.12%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6461,
            range: '±0.99%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6302,
            range: '±1.04%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14160,
            range: '±1.34%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8887,
            range: '±1.19%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11937,
            range: '±0.99%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 347054,
            range: '±5.11%',
            unit: 'ops/sec',
            extra: '68 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 310617,
            range: '±5.12%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 334267,
            range: '±4.78%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 277700,
            range: '±4.75%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 30196,
            range: '±3.34%',
            unit: 'ops/sec',
            extra: '70 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 380,
            range: '±3.46%',
            unit: 'ops/sec',
            extra: '66 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 22888,
            range: '±2.92%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1712,
            range: '±1.97%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Query#query * 1',
            value: 21017,
            range: '±3.56%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
        ],
      },
    ],
  },
}
