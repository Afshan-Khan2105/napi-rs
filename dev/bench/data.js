window.BENCHMARK_DATA = {
  lastUpdate: 1642422615820,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '859b422ba851c26dfe1cdf5aed26fe021e7133fa',
          message: 'Merge pull request #1035 from napi-rs/zig-cross-fix',
          timestamp: '2022-01-17T20:25:34+08:00',
          tree_id: 'c538f694a97dc571cc64022da852af0774b43036',
          url: 'https://github.com/napi-rs/napi-rs/commit/859b422ba851c26dfe1cdf5aed26fe021e7133fa',
        },
        date: 1642422614343,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 53738221,
            range: '±1.58%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 907128842,
            range: '±0.96%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 17045631,
            range: '±1.5%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 864506220,
            range: '±1.21%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 337079,
            range: '±8.46%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1723827,
            range: '±5.79%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 39221,
            range: '±1.78%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7421,
            range: '±0.95%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7380,
            range: '±1.12%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14916,
            range: '±1.7%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 9260,
            range: '±2.01%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11641,
            range: '±1.27%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 426269,
            range: '±5.24%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 345229,
            range: '±4.96%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 354533,
            range: '±4.98%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 340938,
            range: '±4.91%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 34851,
            range: '±3.53%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 438,
            range: '±3.72%',
            unit: 'ops/sec',
            extra: '63 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 24546,
            range: '±3.43%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1882,
            range: '±1.4%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Query#query * 1',
            value: 23643,
            range: '±1.38%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
        ],
      },
    ],
  },
}
