window.BENCHMARK_DATA = {
  lastUpdate: 1642132354894,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '6b01785d03191172072e6cfbf4a6d17ecec21f50',
          message:
            'Merge pull request #1020 from dceddia/threadsafe-function-cleanup\n\nfix(napi): abort threadsafe functions upon env cleanup',
          timestamp: '2022-01-14T11:48:11+08:00',
          tree_id: 'fe32cbbe0eaa9c7f592657d35d464599ddfd5288',
          url: 'https://github.com/napi-rs/napi-rs/commit/6b01785d03191172072e6cfbf4a6d17ecec21f50',
        },
        date: 1642132353675,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 56109830,
            range: '±0.34%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 711435121,
            range: '±0.27%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 19223631,
            range: '±0.38%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 709886551,
            range: '±0.17%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 340190,
            range: '±10.3%',
            unit: 'ops/sec',
            extra: '59 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1556506,
            range: '±6.68%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 37004,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7455,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7500,
            range: '±0.23%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16334,
            range: '±0.61%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10117,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12206,
            range: '±0.06%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 385878,
            range: '±6.08%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 342478,
            range: '±5.49%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 348847,
            range: '±5.37%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 325937,
            range: '±6.01%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 37560,
            range: '±3%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 412,
            range: '±2.99%',
            unit: 'ops/sec',
            extra: '67 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 28376,
            range: '±1.04%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2083,
            range: '±1.78%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Query#query * 1',
            value: 28254,
            range: '±2.94%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
        ],
      },
    ],
  },
}
