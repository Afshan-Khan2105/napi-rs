window.BENCHMARK_DATA = {
  lastUpdate: 1637043348767,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '0743ced07a00d9dda59d94cf468c56122e2d1a95',
          message:
            'Merge pull request #860 from napi-rs/pipe-command\n\nfeat(napi): add pipe flag to pipe the generated files into custom command',
          timestamp: '2021-11-16T14:11:06+08:00',
          tree_id: '632594022381da0b22003f066be20e5a76a66c3f',
          url: 'https://github.com/napi-rs/napi-rs/commit/0743ced07a00d9dda59d94cf468c56122e2d1a95',
        },
        date: 1637043347000,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 46128040,
            range: '±1.55%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 664788767,
            range: '±1.4%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 15095946,
            range: '±1.45%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 689103656,
            range: '±1.4%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 303074,
            range: '±10.52%',
            unit: 'ops/sec',
            extra: '60 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2120385,
            range: '±2.81%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 31363,
            range: '±1.13%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6492,
            range: '±0.97%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6512,
            range: '±1.16%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 15719,
            range: '±0.92%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8731,
            range: '±0.96%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10851,
            range: '±1.04%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 314529,
            range: '±6.21%',
            unit: 'ops/sec',
            extra: '67 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 267599,
            range: '±5.75%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 283289,
            range: '±5.31%',
            unit: 'ops/sec',
            extra: '66 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 259341,
            range: '±5.73%',
            unit: 'ops/sec',
            extra: '67 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 32301,
            range: '±3.32%',
            unit: 'ops/sec',
            extra: '67 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 351,
            range: '±3.3%',
            unit: 'ops/sec',
            extra: '64 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 25688,
            range: '±2.8%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1901,
            range: '±2.14%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Query#query * 1',
            value: 22717,
            range: '±2.13%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
        ],
      },
    ],
  },
}
