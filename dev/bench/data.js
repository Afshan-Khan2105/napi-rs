window.BENCHMARK_DATA = {
  lastUpdate: 1632331999638,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'forehalo@gmail.com',
            name: 'forehalo',
            username: 'forehalo',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '2467b7139b1e96a315651254046bb2e1788be6c7',
          message:
            'Introduce `#[napi]` procedural macro to automation development boilerplate (#696)\n\n* napi procedural macro for basic rust/JavaScript types\r\n* introduce the `compat-mode` for `napi` and `napi-derive` crates for backward compatible\r\n* remove #[inline] and let compiler to decide the inline behavior\r\n* cli now can produce the `.d.ts` file for native binding\r\n* many tests and example for the new procedural macro\r\n\r\nCo-authored-by: LongYinan <lynweklm@gmail.com>',
          timestamp: '2021-09-23T01:29:09+08:00',
          tree_id: 'ff4a77845c9a1f54e77a3a0c0e0c593def9c4afc',
          url: 'https://github.com/napi-rs/napi-rs/commit/2467b7139b1e96a315651254046bb2e1788be6c7',
        },
        date: 1632331998319,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 48788793,
            range: '±0.6%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 621274516,
            range: '±0.54%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 13020145,
            range: '±0.44%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 629500251,
            range: '±0.58%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 305610,
            range: '±9.35%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1814582,
            range: '±8.77%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 32075,
            range: '±0.57%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7035,
            range: '±0.91%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6966,
            range: '±0.7%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 15229,
            range: '±0.83%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8559,
            range: '±0.89%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10359,
            range: '±0.81%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 341052,
            range: '±5.99%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 322847,
            range: '±5.43%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 322801,
            range: '±5.25%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 296217,
            range: '±5.41%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 29573,
            range: '±1.22%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 296,
            range: '±4.49%',
            unit: 'ops/sec',
            extra: '53 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 23965,
            range: '±2.17%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1801,
            range: '±2.63%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 1',
            value: 23224,
            range: '±2.14%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
        ],
      },
    ],
  },
}
