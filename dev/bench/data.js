window.BENCHMARK_DATA = {
  lastUpdate: 1636177962452,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'beb2cc8a2701a7da4ecea1ee234c776a26ae3117',
          message:
            'Merge pull request #836 from napi-rs/type-gen-issue\n\nfix(napi-derive): type generate issue for Factory and Class',
          timestamp: '2021-11-06T13:48:45+08:00',
          tree_id: '25e496b558b4ddb58cceb69709a081ca5f925df8',
          url: 'https://github.com/napi-rs/napi-rs/commit/beb2cc8a2701a7da4ecea1ee234c776a26ae3117',
        },
        date: 1636177961317,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 55012711,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 715021899,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18337669,
            range: '±1.71%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 714296143,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 376023,
            range: '±9.41%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2069947,
            range: '±6.37%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 36658,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7707,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7881,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16724,
            range: '±0.38%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10235,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12696,
            range: '±0.05%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 388686,
            range: '±5.51%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 348636,
            range: '±5.26%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 347518,
            range: '±5.05%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 316575,
            range: '±5.57%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 34419,
            range: '±2.31%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 368,
            range: '±4.3%',
            unit: 'ops/sec',
            extra: '48 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 27485,
            range: '±1.61%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2173,
            range: '±0.53%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 27122,
            range: '±3.12%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
