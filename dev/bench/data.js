window.BENCHMARK_DATA = {
  lastUpdate: 1637037678933,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '0e0bfb1c0a48fe38aa21d1b762481b6e96278bd7',
          message:
            'Release independent packages\n\nnapi-derive-backend@1.0.6\nnapi-derive@2.0.0-alpha.5\n\nGenerated by cargo-workspaces',
          timestamp: '2021-11-16T12:36:19+08:00',
          tree_id: '93cd5e0c448992dedcec148d52e34ccb901f6dad',
          url: 'https://github.com/napi-rs/napi-rs/commit/0e0bfb1c0a48fe38aa21d1b762481b6e96278bd7',
        },
        date: 1637037677228,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54423059,
            range: '±1.52%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 712863558,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 17625326,
            range: '±0.26%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 710888888,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 356289,
            range: '±11.67%',
            unit: 'ops/sec',
            extra: '58 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2204612,
            range: '±6.8%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 35272,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7916,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7846,
            range: '±0.22%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 17184,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10321,
            range: '±0.05%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12706,
            range: '±0.19%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 379490,
            range: '±5.26%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 343965,
            range: '±5.28%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 342121,
            range: '±5.11%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 321044,
            range: '±5.46%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 38908,
            range: '±1.11%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 441,
            range: '±3.49%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 28905,
            range: '±1.4%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2054,
            range: '±1.95%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29466,
            range: '±0.4%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
        ],
      },
    ],
  },
}
