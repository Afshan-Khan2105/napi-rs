window.BENCHMARK_DATA = {
  lastUpdate: 1636965640374,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '0d469ed8db214700d4096a65fcd8f452cbb30179',
          message:
            'Merge pull request #851 from timfish/fix/qualify\n\nFully qualify all types in generated code',
          timestamp: '2021-11-15T16:36:17+08:00',
          tree_id: 'bcff3880c46354bb225f722d110c10dbde2fdb92',
          url: 'https://github.com/napi-rs/napi-rs/commit/0d469ed8db214700d4096a65fcd8f452cbb30179',
        },
        date: 1636965638500,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 59305206,
            range: '±0.51%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 595488558,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18892280,
            range: '±0.24%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 594472594,
            range: '±0.18%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 404462,
            range: '±7.7%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2165818,
            range: '±6.66%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 38107,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 8657,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 8483,
            range: '±0.25%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 18588,
            range: '±0.32%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 11160,
            range: '±0.17%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 13751,
            range: '±0.33%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 361177,
            range: '±4.72%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 324745,
            range: '±4.58%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 341316,
            range: '±4.45%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 306114,
            range: '±4.27%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 35592,
            range: '±1.97%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 336,
            range: '±2.04%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 28873,
            range: '±1.1%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2266,
            range: '±1.51%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29969,
            range: '±0.38%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
