window.BENCHMARK_DATA = {
  lastUpdate: 1630513080753,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '40188bb7265fec7d56f713d633264ede24ad2f6a',
          message:
            'Merge pull request #725 from napi-rs/add-new-command-back\n\nfeat(cli): add back new command',
          timestamp: '2021-09-02T00:04:01+08:00',
          tree_id: 'a37518844b73372710fdd7d94a62547b806e9dbd',
          url: 'https://github.com/napi-rs/napi-rs/commit/40188bb7265fec7d56f713d633264ede24ad2f6a',
        },
        date: 1630513078810,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 42377405,
            range: '±0.86%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 579427769,
            range: '±0.59%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18463792,
            range: '±0.35%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 581891004,
            range: '±0.24%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 312392,
            range: '±10.92%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1740793,
            range: '±1.89%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 29664,
            range: '±0.54%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6543,
            range: '±0.62%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6522,
            range: '±0.67%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14017,
            range: '±0.47%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8553,
            range: '±0.63%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10083,
            range: '±0.76%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 341954,
            range: '±5.73%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 298452,
            range: '±5.69%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 300069,
            range: '±5.54%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 277548,
            range: '±5.48%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 28509,
            range: '±1.95%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 323,
            range: '±3.94%',
            unit: 'ops/sec',
            extra: '60 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 34012,
            range: '±2.95%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1708,
            range: '±1.19%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 1',
            value: 25892,
            range: '±2.96%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
        ],
      },
    ],
  },
}
