window.BENCHMARK_DATA = {
  lastUpdate: 1644120164492,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'd.griesel@gmx.net',
            name: 'AlCalzone',
            username: 'AlCalzone',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'ed12bd76bdb415620db761be5429a214b8d169b5',
          message:
            'feat: impl `FromNapiValue` for `serde_json::Number`, fix it for `Null`, throw for impossible types (#1052)\n\nfix #1013\r\n\r\nCo-authored-by: zeroslope <jsx55242@foxmail.com>',
          timestamp: '2022-02-06T11:58:17+08:00',
          tree_id: 'd90c46476b8e854c6817fd46f1916f67e47c5002',
          url: 'https://github.com/napi-rs/napi-rs/commit/ed12bd76bdb415620db761be5429a214b8d169b5',
        },
        date: 1644120163188,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 47156231,
            range: '±0.26%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 595332567,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 14951121,
            range: '±0.57%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 589072849,
            range: '±0.21%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 308970,
            range: '±10.01%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1528155,
            range: '±4.44%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 31621,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6407,
            range: '±0.21%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6370,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13857,
            range: '±0.78%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8491,
            range: '±0.25%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10210,
            range: '±0.22%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 369132,
            range: '±4.8%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 310941,
            range: '±4.74%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 341882,
            range: '±4.65%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 309660,
            range: '±4.47%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 28969,
            range: '±2.63%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 358,
            range: '±3.78%',
            unit: 'ops/sec',
            extra: '58 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 24095,
            range: '±1.2%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1854,
            range: '±1.59%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Query#query * 1',
            value: 24213,
            range: '±0.85%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
        ],
      },
    ],
  },
}
