window.BENCHMARK_DATA = {
  lastUpdate: 1641180762205,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'fluxxu@gmail.com',
            name: 'Flux Xu',
            username: 'fluxxu',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '881fd52063fe6766e221979ab2cad192402dd1fc',
          message:
            'fix(napi-derive): unraw rust identifiers before sending it to js. (#987)',
          timestamp: '2022-01-03T11:28:35+08:00',
          tree_id: '06937289986ef0651e9dde07e2cbfd9ea0f0ec2b',
          url: 'https://github.com/napi-rs/napi-rs/commit/881fd52063fe6766e221979ab2cad192402dd1fc',
        },
        date: 1641180760502,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54061195,
            range: '±0.32%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 714255624,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 19223128,
            range: '±0.18%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 714013033,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 356747,
            range: '±9.74%',
            unit: 'ops/sec',
            extra: '59 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1795270,
            range: '±1.28%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 39335,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7879,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '100 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7844,
            range: '±0.47%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16479,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10550,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 13314,
            range: '±0.05%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 403054,
            range: '±5.66%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 333265,
            range: '±5.33%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 361068,
            range: '±5.11%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 325676,
            range: '±5.38%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 38057,
            range: '±0.95%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 420,
            range: '±2.56%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 28827,
            range: '±0.88%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2080,
            range: '±1.89%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29579,
            range: '±2.15%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
        ],
      },
    ],
  },
}
