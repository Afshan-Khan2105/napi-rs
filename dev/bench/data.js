window.BENCHMARK_DATA = {
  lastUpdate: 1636213086795,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: 'e0671fe071038beba7ca6b098283433a9c66c07d',
          message: 'feat(napi): implement Env::throw to throw any JsValue',
          timestamp: '2021-11-06T23:33:58+08:00',
          tree_id: 'b804146edeaed80d8046526b1aede9bd13744c8a',
          url: 'https://github.com/napi-rs/napi-rs/commit/e0671fe071038beba7ca6b098283433a9c66c07d',
        },
        date: 1636213085056,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 61785736,
            range: '±0.37%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 809172039,
            range: '±0.19%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 19998431,
            range: '±0.82%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 808583188,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 367544,
            range: '±12.15%',
            unit: 'ops/sec',
            extra: '66 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2191371,
            range: '±4.22%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 40861,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 8878,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 9009,
            range: '±0.62%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 18855,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 11701,
            range: '±0.02%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 14178,
            range: '±0.59%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 414313,
            range: '±5.74%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 355409,
            range: '±5.69%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 365855,
            range: '±5.75%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 341688,
            range: '±5.71%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 39223,
            range: '±1.44%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 375,
            range: '±4.41%',
            unit: 'ops/sec',
            extra: '57 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 31583,
            range: '±0.41%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2396,
            range: '±2.11%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Query#query * 1',
            value: 31490,
            range: '±2.13%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
        ],
      },
    ],
  },
}
