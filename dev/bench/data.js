window.BENCHMARK_DATA = {
  lastUpdate: 1639047205118,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: 'f4b0a2e3228eb9d6d2c8f51e31d250930799ce1d',
          message: 'fix(cli): enum TypeScript type should be const enum',
          timestamp: '2021-12-09T18:48:50+08:00',
          tree_id: '4929f02961f12645bf2c4a7e102e478f2c147b0f',
          url: 'https://github.com/napi-rs/napi-rs/commit/f4b0a2e3228eb9d6d2c8f51e31d250930799ce1d',
        },
        date: 1639047203845,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54351374,
            range: '±0.46%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 712755108,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18924572,
            range: '±0.21%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 710879742,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 367250,
            range: '±8.41%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1795262,
            range: '±0.93%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 40915,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7741,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7742,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16874,
            range: '±0.78%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10568,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 13249,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '100 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 408337,
            range: '±4.67%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 348177,
            range: '±4.63%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 359332,
            range: '±4.39%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 324356,
            range: '±4.83%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 36179,
            range: '±1.33%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 407,
            range: '±3.18%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 28426,
            range: '±0.55%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2022,
            range: '±1.54%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29048,
            range: '±2%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
