window.BENCHMARK_DATA = {
  lastUpdate: 1638162146262,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'tim@timfish.uk',
            name: 'Tim Fish',
            username: 'timfish',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '18d2743862819a35261cc70556e44fbcfe8bb47d',
          message:
            'feat(napi): output Rust doc comments in definitions as jsdoc comments',
          timestamp: '2021-11-29T12:54:45+08:00',
          tree_id: '6a7bc4a850c44facf8424ecca2237193a60367fb',
          url: 'https://github.com/napi-rs/napi-rs/commit/18d2743862819a35261cc70556e44fbcfe8bb47d',
        },
        date: 1638162144577,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 62384263,
            range: '±3.38%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 809762860,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 20862397,
            range: '±0.46%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 808413556,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 406407,
            range: '±8.95%',
            unit: 'ops/sec',
            extra: '58 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1858870,
            range: '±3.62%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 45977,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 8669,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 8652,
            range: '±0.17%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 18857,
            range: '±0.61%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 12012,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 15072,
            range: '±0.07%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 450373,
            range: '±4.88%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 369912,
            range: '±4.78%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 387907,
            range: '±4.53%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 365269,
            range: '±4.63%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 38837,
            range: '±1.5%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 400,
            range: '±2.82%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29677,
            range: '±1.35%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2284,
            range: '±0.21%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'Query#query * 1',
            value: 30520,
            range: '±2.16%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
        ],
      },
    ],
  },
}
