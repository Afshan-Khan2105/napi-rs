window.BENCHMARK_DATA = {
  lastUpdate: 1639458749085,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '8debc09b7fb3a14e7a9178850c29eada51609f63',
          message: 'Release independent packages\n\nnapi@2.0.0-beta.7',
          timestamp: '2021-12-14T13:00:07+08:00',
          tree_id: '976c98ba2507d1c613e4edbf88e77e96a9288405',
          url: 'https://github.com/napi-rs/napi-rs/commit/8debc09b7fb3a14e7a9178850c29eada51609f63',
        },
        date: 1639458747917,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54045173,
            range: '±0.32%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 713315988,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18484471,
            range: '±1.08%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 709767181,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 342808,
            range: '±10.09%',
            unit: 'ops/sec',
            extra: '56 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1502897,
            range: '±2.68%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 39170,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7406,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7671,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16019,
            range: '±0.68%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10389,
            range: '±0.18%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11699,
            range: '±0.86%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 389537,
            range: '±5.68%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 337837,
            range: '±5.84%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 350805,
            range: '±5.45%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 320149,
            range: '±5.52%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 35323,
            range: '±2.43%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 388,
            range: '±3.29%',
            unit: 'ops/sec',
            extra: '49 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 28130,
            range: '±1.8%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2089,
            range: '±1.76%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Query#query * 1',
            value: 27531,
            range: '±3.97%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
        ],
      },
    ],
  },
}
