window.BENCHMARK_DATA = {
  lastUpdate: 1637041627882,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '41037ec193282e58e559c25f8a263178c3050a38',
          message:
            'Merge pull request #859 from napi-rs/fix-newline\n\nfix: always add a newline at the end of the file when generating js-binding.js',
          timestamp: '2021-11-16T13:42:21+08:00',
          tree_id: '27dcdb43ef4a628acc7e7080089a411bbeb53725',
          url: 'https://github.com/napi-rs/napi-rs/commit/41037ec193282e58e559c25f8a263178c3050a38',
        },
        date: 1637041626578,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 49325119,
            range: '±1.85%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 827951190,
            range: '±1.02%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 15523012,
            range: '±1.3%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 721815631,
            range: '±0.88%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 285826,
            range: '±7.32%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1730851,
            range: '±7.95%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 31547,
            range: '±0.92%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6596,
            range: '±1.15%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6134,
            range: '±0.8%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14052,
            range: '±0.95%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8514,
            range: '±0.98%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10517,
            range: '±1.43%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 344231,
            range: '±5.64%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 311637,
            range: '±5.2%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 301691,
            range: '±6.03%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 280754,
            range: '±5.59%',
            unit: 'ops/sec',
            extra: '66 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 33455,
            range: '±2.35%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 406,
            range: '±3.29%',
            unit: 'ops/sec',
            extra: '60 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 23110,
            range: '±4.25%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1644,
            range: '±1.47%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Query#query * 1',
            value: 20877,
            range: '±1.41%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
        ],
      },
    ],
  },
}
