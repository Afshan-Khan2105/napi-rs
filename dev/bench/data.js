window.BENCHMARK_DATA = {
  lastUpdate: 1638942200810,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '3ae12f7c360fe5f5a38e1f7b9bd81945637b939b',
          message:
            'Release independent packages\n\nnapi-derive@2.0.0-beta.4\nnapi-derive-backend@1.0.16',
          timestamp: '2021-12-08T13:37:37+08:00',
          tree_id: '3f8987281f160d42272f5eaef541841f220dc800',
          url: 'https://github.com/napi-rs/napi-rs/commit/3ae12f7c360fe5f5a38e1f7b9bd81945637b939b',
        },
        date: 1638942198910,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 43250402,
            range: '±2.05%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 719278031,
            range: '±0.37%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 15908296,
            range: '±0.71%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 716053239,
            range: '±0.62%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 252532,
            range: '±8.9%',
            unit: 'ops/sec',
            extra: '54 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1032349,
            range: '±4.32%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 31706,
            range: '±1.9%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 5823,
            range: '±0.84%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 5859,
            range: '±0.51%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13196,
            range: '±1.22%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8262,
            range: '±0.72%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10965,
            range: '±0.49%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 307855,
            range: '±7.14%',
            unit: 'ops/sec',
            extra: '68 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 283032,
            range: '±7.04%',
            unit: 'ops/sec',
            extra: '70 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 308001,
            range: '±6.26%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 268114,
            range: '±6.52%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 31488,
            range: '±2.45%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 379,
            range: '±3.37%',
            unit: 'ops/sec',
            extra: '59 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 22107,
            range: '±2.85%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1528,
            range: '±1.92%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Query#query * 1',
            value: 19302,
            range: '±1.83%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
        ],
      },
    ],
  },
}
