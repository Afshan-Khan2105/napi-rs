window.BENCHMARK_DATA = {
  lastUpdate: 1638436912297,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '140fa7b502d70c8ca36374cd3b7bd3a8bd0f2f68',
          message:
            'Release independent packages\n\nnapi@2.0.0-beta.1\nnapi-derive@2.0.0-beta.1\nnapi-derive-backend@1.0.13',
          timestamp: '2021-12-02T17:10:58+08:00',
          tree_id: 'acfedcaf1fee49f67273bfd6ef13f7dde32bc6d6',
          url: 'https://github.com/napi-rs/napi-rs/commit/140fa7b502d70c8ca36374cd3b7bd3a8bd0f2f68',
        },
        date: 1638436910560,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 44832132,
            range: '±0.51%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 592770461,
            range: '±0.18%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 15508346,
            range: '±0.19%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 590558600,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 312273,
            range: '±9.37%',
            unit: 'ops/sec',
            extra: '58 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1439024,
            range: '±3.96%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 33468,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6539,
            range: '±0.23%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6451,
            range: '±0.18%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14159,
            range: '±0.74%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8842,
            range: '±0.4%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11123,
            range: '±0.61%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 354680,
            range: '±4.92%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 304942,
            range: '±4.79%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 323230,
            range: '±4.78%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 286798,
            range: '±4.86%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 27285,
            range: '±1.82%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 326,
            range: '±3.47%',
            unit: 'ops/sec',
            extra: '50 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 21267,
            range: '±3.4%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1742,
            range: '±1.09%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 1',
            value: 22019,
            range: '±2.2%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
        ],
      },
    ],
  },
}
