window.BENCHMARK_DATA = {
  lastUpdate: 1638957947337,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '0723e158e5f6254c072dccc67da9d404de2cb428',
          message: 'Release independent packages\n\nnapi@2.0.0-beta.5',
          timestamp: '2021-12-08T18:00:06+08:00',
          tree_id: '40d914095ac62276448f1fedf344d256da986f6c',
          url: 'https://github.com/napi-rs/napi-rs/commit/0723e158e5f6254c072dccc67da9d404de2cb428',
        },
        date: 1638957945458,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 43748816,
            range: '±0.88%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 597421822,
            range: '±1.23%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 15371779,
            range: '±0.87%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 582972044,
            range: '±0.88%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 309429,
            range: '±9.64%',
            unit: 'ops/sec',
            extra: '58 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1542632,
            range: '±1.55%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 32901,
            range: '±0.8%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6489,
            range: '±1.14%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6433,
            range: '±0.94%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13833,
            range: '±1.18%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 9060,
            range: '±0.5%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11335,
            range: '±0.43%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 352615,
            range: '±5.1%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 290767,
            range: '±4.99%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 323724,
            range: '±5.09%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 272936,
            range: '±4.84%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 29273,
            range: '±1.05%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 352,
            range: '±2.57%',
            unit: 'ops/sec',
            extra: '62 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 22621,
            range: '±2.14%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1706,
            range: '±0.73%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 1',
            value: 23964,
            range: '±2.26%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
        ],
      },
    ],
  },
}
