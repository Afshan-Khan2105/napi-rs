window.BENCHMARK_DATA = {
  lastUpdate: 1636208317470,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'c2c5887ea444add50ea00262c052e699e974648a',
          message:
            'Merge pull request #837 from napi-rs/return-result\n\nfix(napi-derive): return Result type in Constructor and Factory',
          timestamp: '2021-11-06T22:13:55+08:00',
          tree_id: '654d49d5aefcb990ac27ef7c4ffed43db6958c0a',
          url: 'https://github.com/napi-rs/napi-rs/commit/c2c5887ea444add50ea00262c052e699e974648a',
        },
        date: 1636208315886,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 48978862,
            range: '±1.73%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 722664023,
            range: '±1.55%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 14491833,
            range: '±1.18%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 742046826,
            range: '±0.93%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 282930,
            range: '±12.25%',
            unit: 'ops/sec',
            extra: '70 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1622927,
            range: '±7.83%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 27773.7,
            range: '±0.89%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6275.4,
            range: '±1.24%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6274.9,
            range: '±1.38%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14904,
            range: '±1.83%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8840,
            range: '±1.33%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10719,
            range: '±1.06%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 318067,
            range: '±5.69%',
            unit: 'ops/sec',
            extra: '68 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 292174,
            range: '±6.24%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 284854,
            range: '±6.66%',
            unit: 'ops/sec',
            extra: '67 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 294377,
            range: '±6.16%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 26382,
            range: '±2.3%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 358,
            range: '±3.14%',
            unit: 'ops/sec',
            extra: '64 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 23174,
            range: '±2.29%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1681,
            range: '±2.03%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Query#query * 1',
            value: 20024,
            range: '±2.58%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
        ],
      },
    ],
  },
}
