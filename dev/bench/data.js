window.BENCHMARK_DATA = {
  lastUpdate: 1646622593444,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '1cac0ac804d526932ccd1c24602976c7ce564a4e',
          message: 'feat(cli): upgrade ci.yml templates',
          timestamp: '2022-03-07T11:05:52+08:00',
          tree_id: '8846d93afbb45f87598ef46cb04e3b2bcf88539d',
          url: 'https://github.com/napi-rs/napi-rs/commit/1cac0ac804d526932ccd1c24602976c7ce564a4e',
        },
        date: 1646622591870,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 63508518,
            range: '±0.26%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 812667910,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 20059776,
            range: '±0.77%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 809371681,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 410133,
            range: '±8.74%',
            unit: 'ops/sec',
            extra: '62 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1904751,
            range: '±4.78%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 40909,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 8356,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 8317,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '100 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 17999,
            range: '±0.36%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 11512,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 13624,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 469967,
            range: '±4.74%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 378540,
            range: '±4.85%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 388633,
            range: '±4.74%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 354015,
            range: '±4.79%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 39287,
            range: '±1.49%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 417,
            range: '±4.19%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 31520,
            range: '±0.62%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2378,
            range: '±1.68%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Query#query * 1',
            value: 31262,
            range: '±1.85%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
        ],
      },
    ],
  },
}
