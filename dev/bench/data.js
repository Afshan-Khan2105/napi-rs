window.BENCHMARK_DATA = {
  lastUpdate: 1641266462407,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '04012915bb18d0db5a4d00808b9a3c877f355a36',
          message: 'Release independent packages\n\nnapi-derive@2.0.5',
          timestamp: '2022-01-04T11:06:38+08:00',
          tree_id: 'aff25e6d981f157d15e200d59e12237ae11f7db2',
          url: 'https://github.com/napi-rs/napi-rs/commit/04012915bb18d0db5a4d00808b9a3c877f355a36',
        },
        date: 1641266461110,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54425249,
            range: '±0.42%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 712346603,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18087939,
            range: '±0.25%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 710712241,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 340455,
            range: '±10.52%',
            unit: 'ops/sec',
            extra: '57 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1655858,
            range: '±1.97%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 38574,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7816,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7814,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16279,
            range: '±0.73%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10497,
            range: '±0.3%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 13278,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 394650,
            range: '±6.12%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 343391,
            range: '±5.69%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 351786,
            range: '±5.54%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 321518,
            range: '±5.57%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 37506,
            range: '±0.95%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 419,
            range: '±2.54%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29060,
            range: '±0.47%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2164,
            range: '±1.22%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Query#query * 1',
            value: 30101,
            range: '±0.51%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
        ],
      },
    ],
  },
}
