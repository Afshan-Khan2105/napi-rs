window.BENCHMARK_DATA = {
  lastUpdate: 1641480837261,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'forehalo@gmail.com',
            name: 'yiliuliuyi',
            username: 'forehalo',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '8aee7928b9b80d627b78e35ac84a245d86822df0',
          message:
            'Merge pull request #1015 from napi-rs/fix/bigint\n\nfix(napi-derive): BigInt in TypeScript should be bigint',
          timestamp: '2022-01-06T22:49:59+08:00',
          tree_id: '16306b77c6e335e19d84eb337dd22eb0597289a2',
          url: 'https://github.com/napi-rs/napi-rs/commit/8aee7928b9b80d627b78e35ac84a245d86822df0',
        },
        date: 1641480836073,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54487418,
            range: '±0.51%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 712909805,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18481267,
            range: '±0.18%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 712188476,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 360322,
            range: '±9.31%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1834497,
            range: '±4.12%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 38896,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7801,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7767,
            range: '±0.24%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16389,
            range: '±0.59%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10643,
            range: '±0.04%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 13303,
            range: '±0.08%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 409304,
            range: '±5.08%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 349232,
            range: '±5.03%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 372046,
            range: '±4.7%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 334384,
            range: '±5.08%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 38268,
            range: '±1.15%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 419,
            range: '±2.86%',
            unit: 'ops/sec',
            extra: '56 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29285,
            range: '±0.57%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2193,
            range: '±2.06%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 30696,
            range: '±0.36%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
        ],
      },
    ],
  },
}
