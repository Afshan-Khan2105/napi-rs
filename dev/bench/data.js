window.BENCHMARK_DATA = {
  lastUpdate: 1641457364840,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'b47ccbd194d12227d5ee6935aca1102ab766ea44',
          message:
            'Merge pull request #1010 from napi-rs/fix/throw-mismatch-object\n\nfix(napi-derive): should throw rather than panic if object mismatched',
          timestamp: '2022-01-06T16:15:33+08:00',
          tree_id: '1a542978e93e58a40af474ff6869ca4e6b84040a',
          url: 'https://github.com/napi-rs/napi-rs/commit/b47ccbd194d12227d5ee6935aca1102ab766ea44',
        },
        date: 1641457363655,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 56255191,
            range: '±1.32%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 714677493,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18935069,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 713630820,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 356145,
            range: '±9.99%',
            unit: 'ops/sec',
            extra: '60 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1800577,
            range: '±4.51%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 39188,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7586,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7683,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16782,
            range: '±0.61%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10517,
            range: '±0.19%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12911,
            range: '±0.27%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 402696,
            range: '±5.2%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 355938,
            range: '±5.07%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 377329,
            range: '±4.79%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 337704,
            range: '±5.14%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 37288,
            range: '±1.14%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 413,
            range: '±2.59%',
            unit: 'ops/sec',
            extra: '59 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29742,
            range: '±0.48%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2051,
            range: '±1.44%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Query#query * 1',
            value: 30835,
            range: '±0.5%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
        ],
      },
    ],
  },
}
