window.BENCHMARK_DATA = {
  lastUpdate: 1648794951981,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'git@stephank.nl',
            name: 'Stéphan Kochen',
            username: 'stephank',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '50f62f40d73b67d7b603d597b043992839522831',
          message: 'fix(napi): double allocation in create_buffer',
          timestamp: '2022-04-01T14:31:29+08:00',
          tree_id: '73d48fc464d2d31c59cc8d3e603ba4e9fed8a800',
          url: 'https://github.com/napi-rs/napi-rs/commit/50f62f40d73b67d7b603d597b043992839522831',
        },
        date: 1648794950261,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 63029377,
            range: '±0.29%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 811323038,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 21616247,
            range: '±1.19%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 723976766,
            range: '±0.81%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 355473,
            range: '±9.53%',
            unit: 'ops/sec',
            extra: '68 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1795678,
            range: '±8.07%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 43270,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 8543,
            range: '±0.68%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7588,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16949,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10008,
            range: '±0.24%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11833,
            range: '±0.07%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 408514,
            range: '±4.73%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 360209,
            range: '±4.8%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 350845,
            range: '±4.55%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 329167,
            range: '±4.61%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 37604,
            range: '±2.76%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 363,
            range: '±3.96%',
            unit: 'ops/sec',
            extra: '55 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 28636,
            range: '±1.82%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2186,
            range: '±1.85%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 28100,
            range: '±2.1%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
        ],
      },
    ],
  },
}
