window.BENCHMARK_DATA = {
  lastUpdate: 1637919920499,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '19e16eb2ba068500478e05dcf33321c32180262a',
          message:
            'Merge pull request #884 from napi-rs/ts-args-return-type\n\nfeat(napi-derive): support renmae function args and return type',
          timestamp: '2021-11-26T17:40:31+08:00',
          tree_id: '9334b5862cc257942f90623e31100377a4479843',
          url: 'https://github.com/napi-rs/napi-rs/commit/19e16eb2ba068500478e05dcf33321c32180262a',
        },
        date: 1637919918583,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 42011555,
            range: '±1.24%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 651384246,
            range: '±0.74%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 15012427,
            range: '±1.31%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 683561033,
            range: '±1.07%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 303940,
            range: '±10.78%',
            unit: 'ops/sec',
            extra: '58 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1529295,
            range: '±3.81%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 36224,
            range: '±1.01%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6114,
            range: '±1.01%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6282,
            range: '±1.2%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14083,
            range: '±1.58%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8648,
            range: '±1.49%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10698,
            range: '±1.2%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 340016,
            range: '±5.84%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 260541,
            range: '±6.82%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 283822,
            range: '±5.39%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 259292,
            range: '±7.12%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 16742,
            range: '±6.08%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 289,
            range: '±3.9%',
            unit: 'ops/sec',
            extra: '60 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 12810,
            range: '±9.57%',
            unit: 'ops/sec',
            extra: '54 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1355,
            range: '±4.62%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Query#query * 1',
            value: 11497,
            range: '±5.85%',
            unit: 'ops/sec',
            extra: '53 samples',
          },
        ],
      },
    ],
  },
}
