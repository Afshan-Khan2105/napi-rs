window.BENCHMARK_DATA = {
  lastUpdate: 1637039378126,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: 'fa8e32d3c0591e6d391d6cc65cc5cbae845511ac',
          message:
            'Release independent packages\n\nnapi-derive-backend@1.0.7\nnapi-derive@2.0.0-alpha.6\n\nGenerated by cargo-workspaces',
          timestamp: '2021-11-16T13:03:50+08:00',
          tree_id: 'adc4f8c79c428c22078140389757fd4548426455',
          url: 'https://github.com/napi-rs/napi-rs/commit/fa8e32d3c0591e6d391d6cc65cc5cbae845511ac',
        },
        date: 1637039376564,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 47157855,
            range: '±0.92%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 612906778,
            range: '±1.34%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 15162828,
            range: '±1.19%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 632985487,
            range: '±1.07%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 336684,
            range: '±11.6%',
            unit: 'ops/sec',
            extra: '54 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2029637,
            range: '±5.95%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 33955,
            range: '±0.98%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7577,
            range: '±0.93%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7365,
            range: '±0.9%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 15707,
            range: '±0.76%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 9403,
            range: '±1.29%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11755,
            range: '±1.12%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 398115,
            range: '±4.79%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 338009,
            range: '±5.27%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 356884,
            range: '±4.98%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 330301,
            range: '±5.35%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 32231,
            range: '±0.96%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 385,
            range: '±3.02%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 24740,
            range: '±1.13%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2003,
            range: '±1.98%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Query#query * 1',
            value: 25859,
            range: '±1.7%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
        ],
      },
    ],
  },
}
