window.BENCHMARK_DATA = {
  lastUpdate: 1626933071409,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'cae08c5133c179e291ed8e28f1567c3f443d97c5',
          message:
            'Merge pull request #663 from napi-rs/reduce-install-size\n\nchore: reduce published size',
          timestamp: '2021-07-22T13:47:29+08:00',
          tree_id: '8c67bb872ccbdd8a1e6ee1d3977533a63fd933a2',
          url: 'https://github.com/napi-rs/napi-rs/commit/cae08c5133c179e291ed8e28f1567c3f443d97c5',
        },
        date: 1626933070207,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 53836624,
            range: '±0.3%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 712850221,
            range: '±0.17%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 22819679,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 712400976,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 361501,
            range: '±10.17%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2055384,
            range: '±5.36%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 34607,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 8175,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 8154,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 17635,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10597,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12959,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 394127,
            range: '±5.42%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 342073,
            range: '±5.2%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 360963,
            range: '±5.05%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 333250,
            range: '±5.23%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 39701,
            range: '±0.97%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 298,
            range: '±4.85%',
            unit: 'ops/sec',
            extra: '51 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 44750,
            range: '±1.94%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2053,
            range: '±2.28%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 33057,
            range: '±0.97%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
