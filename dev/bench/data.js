window.BENCHMARK_DATA = {
  lastUpdate: 1635524494660,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '27f671c5c255f6f70ff62403673e00853f910c89',
          message:
            'Merge pull request #820 from napi-rs/buffer\n\nnative buffer no need to keep raw napi pointer',
          timestamp: '2021-10-30T00:17:22+08:00',
          tree_id: 'bfebc5ac0754856b1f13aacb82647f4383a549ff',
          url: 'https://github.com/napi-rs/napi-rs/commit/27f671c5c255f6f70ff62403673e00853f910c89',
        },
        date: 1635524493434,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54129032,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 715279887,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18506736,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 712297100,
            range: '±0.22%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 372316,
            range: '±8.61%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2202124,
            range: '±5.75%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 35529,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7986,
            range: '±0.19%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7999,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 17266,
            range: '±0.31%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 9937,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12144,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 398779,
            range: '±5.25%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 355044,
            range: '±4.98%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 357093,
            range: '±4.8%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 333100,
            range: '±5.04%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 39397,
            range: '±1.71%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 350,
            range: '±7.55%',
            unit: 'ops/sec',
            extra: '34 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29218,
            range: '±1.63%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2119,
            range: '±0.35%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29883,
            range: '±1.76%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
