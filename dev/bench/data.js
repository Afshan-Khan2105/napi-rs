window.BENCHMARK_DATA = {
  lastUpdate: 1639805937951,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'forehalo@gmail.com',
            name: 'yiliuliuyi',
            username: 'forehalo',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'a25612987fba8393d6dd97db00024aa05b3b873a',
          message:
            'Merge pull request #938 from liulinboyi/feat-napi\n\nfeat(napi): refine return type',
          timestamp: '2021-12-18T13:29:19+08:00',
          tree_id: '9630b04798779b09f649074917467383c154e60d',
          url: 'https://github.com/napi-rs/napi-rs/commit/a25612987fba8393d6dd97db00024aa05b3b873a',
        },
        date: 1639805936737,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54551769,
            range: '±0.47%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 714048870,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18698968,
            range: '±0.28%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 713499399,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 370676,
            range: '±8.83%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1939348,
            range: '±1.44%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 39258,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7525,
            range: '±0.21%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7527,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16398,
            range: '±0.65%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10386,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12387,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 405978,
            range: '±4.9%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 350330,
            range: '±4.56%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 377610,
            range: '±4.24%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 337918,
            range: '±4.4%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 38562,
            range: '±1.31%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 458,
            range: '±3.12%',
            unit: 'ops/sec',
            extra: '65 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29618,
            range: '±0.42%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2161,
            range: '±1.62%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 30454,
            range: '±2.12%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
        ],
      },
    ],
  },
}
