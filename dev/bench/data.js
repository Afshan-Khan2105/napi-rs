window.BENCHMARK_DATA = {
  lastUpdate: 1646461291430,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '9f3fbaa8e0b6c0bcdd740d39d16de35a4ec18aa8',
          message:
            'fix(napi): race issues with Node.js worker_thread (#1081)\n\nCo-authored-by: Jan Piotrowski <piotrowski+github@gmail.com>',
          timestamp: '2022-03-05T14:14:32+08:00',
          tree_id: '0869c794a37625b61efe338731d3d91306a6f3f2',
          url: 'https://github.com/napi-rs/napi-rs/commit/9f3fbaa8e0b6c0bcdd740d39d16de35a4ec18aa8',
        },
        date: 1646461290172,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 42798168,
            range: '±1.05%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 745373810,
            range: '±1.09%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 12788340,
            range: '±1.75%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 722862102,
            range: '±0.83%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 301123,
            range: '±9.84%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1557011,
            range: '±6.46%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 32106,
            range: '±1.07%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 5972,
            range: '±0.72%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 5964,
            range: '±1.04%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14040,
            range: '±0.99%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 7979,
            range: '±0.7%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 9433,
            range: '±0.75%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 336559,
            range: '±5.09%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 300109,
            range: '±5.09%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 317632,
            range: '±5.41%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 286560,
            range: '±5.25%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 30686,
            range: '±2.75%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 371,
            range: '±3.02%',
            unit: 'ops/sec',
            extra: '64 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 22864,
            range: '±2.99%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1706,
            range: '±2.2%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Query#query * 1',
            value: 20669,
            range: '±2.18%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
        ],
      },
    ],
  },
}
