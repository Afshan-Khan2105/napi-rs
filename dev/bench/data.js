window.BENCHMARK_DATA = {
  lastUpdate: 1636967421765,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '1ef7de4dd6e6dc90c454c5537bf431aca35c66da',
          message:
            'Merge pull request #849 from napi-rs/promise\n\nfeat(napi): await Promise<T> in async fn',
          timestamp: '2021-11-15T17:05:56+08:00',
          tree_id: '7f934623cb7f061278e86515d357e33c39b381c3',
          url: 'https://github.com/napi-rs/napi-rs/commit/1ef7de4dd6e6dc90c454c5537bf431aca35c66da',
        },
        date: 1636967419931,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 46135792,
            range: '±0.23%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 600528501,
            range: '±0.24%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 15434695,
            range: '±0.25%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 601505007,
            range: '±0.26%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 314375,
            range: '±10.01%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1799071,
            range: '±8.01%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 30088,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6651,
            range: '±0.23%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6646,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14571,
            range: '±0.34%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8714,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10746,
            range: '±0.21%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 348320,
            range: '±5.37%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 306535,
            range: '±5.29%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 316642,
            range: '±5.24%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 287971,
            range: '±5.34%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 29776,
            range: '±1.63%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 356,
            range: '±3.25%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 24216,
            range: '±1.81%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1788,
            range: '±0.44%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 25064,
            range: '±1.8%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
        ],
      },
    ],
  },
}
