window.BENCHMARK_DATA = {
  lastUpdate: 1633073035696,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '16aacd8eec3110114ed45fa2311618160d9d5cfb',
          message: 'napi-derive-backend@1.0.1',
          timestamp: '2021-10-01T15:14:13+08:00',
          tree_id: '52b2bad9ec4f04061ae647c67593cfa631d4c9c2',
          url: 'https://github.com/napi-rs/napi-rs/commit/16aacd8eec3110114ed45fa2311618160d9d5cfb',
        },
        date: 1633073034486,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 44394824,
            range: '±1.12%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 768211559,
            range: '±1.25%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 12747080,
            range: '±1.12%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 765884481,
            range: '±1.24%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 309120,
            range: '±10.4%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2050799,
            range: '±12.05%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 29638,
            range: '±1.27%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6197,
            range: '±1.19%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6220,
            range: '±1.69%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14977,
            range: '±1.35%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8232,
            range: '±1.38%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10127,
            range: '±1.29%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 335574,
            range: '±4.87%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 304357,
            range: '±5.24%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 313719,
            range: '±5.39%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 288904,
            range: '±5.37%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 28822,
            range: '±5.29%',
            unit: 'ops/sec',
            extra: '70 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 350,
            range: '±3.24%',
            unit: 'ops/sec',
            extra: '59 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 22780,
            range: '±2.34%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1723,
            range: '±2.83%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Query#query * 1',
            value: 20236,
            range: '±2.43%',
            unit: 'ops/sec',
            extra: '62 samples',
          },
        ],
      },
    ],
  },
}
