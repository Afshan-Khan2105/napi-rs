window.BENCHMARK_DATA = {
  lastUpdate: 1636525588102,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '38d2645632d663733c7093bc84edc4d36e6dc26f',
          message:
            'Release independent packages\n\nnapi-derive-backend@1.0.4\nnapi-derive@2.0.0-alpha.3',
          timestamp: '2021-11-10T14:19:09+08:00',
          tree_id: '3101c516fb5cd9a59e8db85254a0e2b0b7206a5e',
          url: 'https://github.com/napi-rs/napi-rs/commit/38d2645632d663733c7093bc84edc4d36e6dc26f',
        },
        date: 1636525586298,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 49466379,
            range: '±0.59%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 669065096,
            range: '±1.25%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 17419840,
            range: '±1.04%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 647313059,
            range: '±1.58%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 351383,
            range: '±10%',
            unit: 'ops/sec',
            extra: '67 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2107842,
            range: '±1.1%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 32062,
            range: '±1.22%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7095,
            range: '±0.77%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6908,
            range: '±1.92%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 14549,
            range: '±1.28%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8749,
            range: '±1.15%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11613,
            range: '±0.88%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 372771,
            range: '±5.16%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 331223,
            range: '±5.34%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 342935,
            range: '±5.04%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 328175,
            range: '±5.47%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 32752,
            range: '±1.38%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 369,
            range: '±3.83%',
            unit: 'ops/sec',
            extra: '39 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 23925,
            range: '±3.51%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1978,
            range: '±2.09%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 1',
            value: 27167,
            range: '±1.8%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
        ],
      },
    ],
  },
}
