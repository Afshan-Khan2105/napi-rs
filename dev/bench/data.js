window.BENCHMARK_DATA = {
  lastUpdate: 1644564493712,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '14773af1598cfc4cfe5fa6fd61768c78cc542f99',
          message:
            'Merge pull request #1069 from simonvandel/chrono_datetime\n\nfeat: Add support for Date <-> chrono::DateTime<Utc>',
          timestamp: '2022-02-11T15:18:34+08:00',
          tree_id: '83c0aa82a9b59312b610eeb4eee7c71ba2f9e2fe',
          url: 'https://github.com/napi-rs/napi-rs/commit/14773af1598cfc4cfe5fa6fd61768c78cc542f99',
        },
        date: 1644564491880,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 48055873,
            range: '±0.52%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 606823748,
            range: '±0.78%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 14398324,
            range: '±1.04%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 621842115,
            range: '±0.52%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 339852,
            range: '±9.57%',
            unit: 'ops/sec',
            extra: '62 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1656015,
            range: '±4.87%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 31905,
            range: '±0.47%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6367,
            range: '±0.44%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6437,
            range: '±0.48%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13729,
            range: '±0.55%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8792,
            range: '±0.38%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10367,
            range: '±0.43%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 358219,
            range: '±4.9%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 324697,
            range: '±5.09%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 334934,
            range: '±5%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 293496,
            range: '±4.97%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 31101,
            range: '±1.25%',
            unit: 'ops/sec',
            extra: '67 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 342,
            range: '±3.03%',
            unit: 'ops/sec',
            extra: '68 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 24508,
            range: '±2.41%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1819,
            range: '±2.11%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 1',
            value: 24999,
            range: '±1.72%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
