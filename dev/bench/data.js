window.BENCHMARK_DATA = {
  lastUpdate: 1637148710174,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'b3446092d029164ec91452cbc88d4e96643c3b18',
          message:
            'Merge pull request #863 from napi-rs/const-var\n\nfeat(napi-derive): support const export',
          timestamp: '2021-11-17T19:27:35+08:00',
          tree_id: 'e550834128e9ba69d2f94913607e692c00e96dcd',
          url: 'https://github.com/napi-rs/napi-rs/commit/b3446092d029164ec91452cbc88d4e96643c3b18',
        },
        date: 1637148708947,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 55028730,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 712564444,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18451765,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 710581368,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 314808,
            range: '±14.11%',
            unit: 'ops/sec',
            extra: '55 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1758466,
            range: '±6%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 34646,
            range: '±0.19%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7937,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7824,
            range: '±0.24%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 17065,
            range: '±0.37%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10119,
            range: '±0.04%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12602,
            range: '±0.04%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 386681,
            range: '±6.35%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 322864,
            range: '±6.14%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 335462,
            range: '±6%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 312694,
            range: '±6.06%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 35484,
            range: '±1.88%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 370,
            range: '±2.45%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 26529,
            range: '±1.96%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1917,
            range: '±2.22%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 27467,
            range: '±0.37%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
        ],
      },
    ],
  },
}
