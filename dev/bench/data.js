window.BENCHMARK_DATA = {
  lastUpdate: 1638170085508,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'adfa14cf941655771bda016e9d6b8634cca813cf',
          message:
            'Merge pull request #887 from napi-rs/remove-enum\n\nfeat(sys): remove rust enum in sys',
          timestamp: '2021-11-29T14:58:05+08:00',
          tree_id: '191c7825e2ba22c5579ad65319defad0c008faf6',
          url: 'https://github.com/napi-rs/napi-rs/commit/adfa14cf941655771bda016e9d6b8634cca813cf',
        },
        date: 1638170083796,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 55460344,
            range: '±0.39%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 711501961,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 17676666,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 709404296,
            range: '±0.19%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 358582,
            range: '±8.98%',
            unit: 'ops/sec',
            extra: '59 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1655476,
            range: '±3.76%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 40595,
            range: '±0.25%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7817,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7811,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16456,
            range: '±0.7%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10383,
            range: '±0.24%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 13305,
            range: '±0.05%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 391318,
            range: '±5.22%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 352574,
            range: '±4.88%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 348411,
            range: '±4.99%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 327977,
            range: '±5.36%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 35945,
            range: '±0.99%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 419,
            range: '±2.99%',
            unit: 'ops/sec',
            extra: '66 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 27693,
            range: '±0.37%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2026,
            range: '±1.36%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Query#query * 1',
            value: 28375,
            range: '±2.08%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
        ],
      },
    ],
  },
}
