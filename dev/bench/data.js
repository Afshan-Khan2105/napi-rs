window.BENCHMARK_DATA = {
  lastUpdate: 1640368660011,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '66e202e2f236780b438cd28652ce7ca0e92e3dbf',
          message: 'Release independent packages\n\nnapi-derive@2.0.4',
          timestamp: '2021-12-25T01:44:37+08:00',
          tree_id: 'ec74891dbb99645364f5484b8bd02a1240788aa3',
          url: 'https://github.com/napi-rs/napi-rs/commit/66e202e2f236780b438cd28652ce7ca0e92e3dbf',
        },
        date: 1640368658702,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 42586668,
            range: '±1.9%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 693654769,
            range: '±1.11%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 14962438,
            range: '±1.07%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 695090797,
            range: '±1.19%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 288810,
            range: '±10.61%',
            unit: 'ops/sec',
            extra: '65 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1183745,
            range: '±3.66%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 31396,
            range: '±0.97%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 5642,
            range: '±1.12%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 5674,
            range: '±0.91%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13011,
            range: '±1.2%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8187,
            range: '±1.01%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10517,
            range: '±1.25%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 313122,
            range: '±6.15%',
            unit: 'ops/sec',
            extra: '70 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 276331,
            range: '±5.37%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 302990,
            range: '±5.4%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 262587,
            range: '±5.58%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 28517,
            range: '±2.78%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 371,
            range: '±2.86%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 20982,
            range: '±2.18%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1628,
            range: '±2.13%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Query#query * 1',
            value: 19555,
            range: '±2.2%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
        ],
      },
    ],
  },
}
