window.BENCHMARK_DATA = {
  lastUpdate: 1641979604349,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '20df7be13adc6fa759c4603e9212dd9aacfc8f3e',
          message:
            'Merge pull request #1023 from napi-rs/fix/get-str-from-object\n\nfix(napi): invalid memory address in FromNapiValue for &str',
          timestamp: '2022-01-12T17:22:20+08:00',
          tree_id: '46945df7c1d811a3fcfc369a0a67dade9f93bd82',
          url: 'https://github.com/napi-rs/napi-rs/commit/20df7be13adc6fa759c4603e9212dd9aacfc8f3e',
        },
        date: 1641979603026,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 46591082,
            range: '±0.29%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 589798809,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 14670407,
            range: '±0.18%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 588401131,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 321294,
            range: '±9.04%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1584908,
            range: '±4.64%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 31471,
            range: '±0.06%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6319,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6307,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13512,
            range: '±0.66%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8725,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10779,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 349977,
            range: '±5.38%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 307475,
            range: '±5.16%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 317725,
            range: '±5.19%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 290544,
            range: '±5.12%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 29165,
            range: '±1.33%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 338,
            range: '±2.86%',
            unit: 'ops/sec',
            extra: '65 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 23638,
            range: '±1.13%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1854,
            range: '±1.47%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 1',
            value: 23844,
            range: '±2.03%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
        ],
      },
    ],
  },
}
