window.BENCHMARK_DATA = {
  lastUpdate: 1637485361118,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '4874c72340c0b6bf10e667506752039864c15d1c',
          message:
            'Release independent packages\n\nnapi-derive-backend@1.0.8\nnapi-derive@2.0.0-alpha.7\nnapi@2.0.0-alpha.5',
          timestamp: '2021-11-21T16:48:05+08:00',
          tree_id: '7402a5ef42cdaffc86981e7af6fb817b57066b18',
          url: 'https://github.com/napi-rs/napi-rs/commit/4874c72340c0b6bf10e667506752039864c15d1c',
        },
        date: 1637485359996,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 55596214,
            range: '±0.31%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 711550380,
            range: '±0.17%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18583648,
            range: '±0.2%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 709437394,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 345520,
            range: '±10.33%',
            unit: 'ops/sec',
            extra: '54 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1592051,
            range: '±3.52%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 45080,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 8608,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 8619,
            range: '±0.25%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 18202,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 11687,
            range: '±0.05%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 14875,
            range: '±0.24%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 414805,
            range: '±6.1%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 370984,
            range: '±5.4%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 367731,
            range: '±5.36%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 342690,
            range: '±5.53%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 38168,
            range: '±1.88%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 349,
            range: '±3.25%',
            unit: 'ops/sec',
            extra: '60 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29614,
            range: '±0.59%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2070,
            range: '±2.16%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Query#query * 1',
            value: 30089,
            range: '±2.45%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
        ],
      },
    ],
  },
}
