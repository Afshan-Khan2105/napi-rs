window.BENCHMARK_DATA = {
  lastUpdate: 1636620745683,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '9a8484144c4a800316dc05966a545692e842bf1d',
          message:
            'Merge pull request #846 from napi-rs/bigint\n\nfeat(napi): BigInt codegen support',
          timestamp: '2021-11-11T16:48:08+08:00',
          tree_id: 'a1a41e314db537a43639098e144fb1bab77620d6',
          url: 'https://github.com/napi-rs/napi-rs/commit/9a8484144c4a800316dc05966a545692e842bf1d',
        },
        date: 1636620744463,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 48969554,
            range: '±2.19%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 875649257,
            range: '±1.03%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 16641404,
            range: '±1.54%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 839165351,
            range: '±1.4%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 317876,
            range: '±9.13%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1980580,
            range: '±7.94%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 33714,
            range: '±1.31%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7315,
            range: '±1.16%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7150,
            range: '±1.1%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16566,
            range: '±1.21%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 9720,
            range: '±1.15%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12343,
            range: '±1.14%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 386566,
            range: '±5.2%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 322539,
            range: '±5.58%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 343196,
            range: '±5.12%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 306031,
            range: '±5.62%',
            unit: 'ops/sec',
            extra: '70 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 32762,
            range: '±3.38%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 409,
            range: '±3.16%',
            unit: 'ops/sec',
            extra: '68 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 25022,
            range: '±5.51%',
            unit: 'ops/sec',
            extra: '71 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1930,
            range: '±2.58%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Query#query * 1',
            value: 23266,
            range: '±1.58%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
        ],
      },
    ],
  },
}
