window.BENCHMARK_DATA = {
  lastUpdate: 1638956398667,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '16fa7a159e05ffb6dc7ebe63989e95ca1ebdb736',
          message:
            'Release independent packages\n\nnapi-derive@2.0.0-beta.5\nnapi-derive-backend@1.0.17',
          timestamp: '2021-12-08T17:33:13+08:00',
          tree_id: '2fad879e880fd8c2b19bf621535b8b24de82d586',
          url: 'https://github.com/napi-rs/napi-rs/commit/16fa7a159e05ffb6dc7ebe63989e95ca1ebdb736',
        },
        date: 1638956396767,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 42945530,
            range: '±0.63%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 636577941,
            range: '±0.56%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 14474260,
            range: '±1.05%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 626804546,
            range: '±0.8%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 309925,
            range: '±10.29%',
            unit: 'ops/sec',
            extra: '68 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1438883,
            range: '±3.71%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 32558,
            range: '±0.75%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 5884,
            range: '±0.79%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 5813,
            range: '±0.9%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13350,
            range: '±1.24%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8461,
            range: '±0.92%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11080,
            range: '±1.35%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 347602,
            range: '±4.69%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 301610,
            range: '±4.53%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 320941,
            range: '±4.26%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 281206,
            range: '±4.56%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 36238,
            range: '±2.58%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 382,
            range: '±2.83%',
            unit: 'ops/sec',
            extra: '65 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 24747,
            range: '±2.61%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1760,
            range: '±0.99%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 1',
            value: 20733,
            range: '±3.05%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
        ],
      },
    ],
  },
}
