window.BENCHMARK_DATA = {
  lastUpdate: 1639927354284,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'b7b405a49b0f2c82c0b950b7b59a658bd6a37497',
          message:
            'Merge pull request #947 from h-a-n-a/feat/skip-ts-gen\n\nfeat(napi-derive): add `skip_typescript` attribute for macro',
          timestamp: '2021-12-19T23:15:05+08:00',
          tree_id: '811bf1b507ef0af36045bb069c873d22138a3ee2',
          url: 'https://github.com/napi-rs/napi-rs/commit/b7b405a49b0f2c82c0b950b7b59a658bd6a37497',
        },
        date: 1639927352616,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 53723992,
            range: '±0.33%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 713960186,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18623119,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 711405620,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 363410,
            range: '±9.07%',
            unit: 'ops/sec',
            extra: '58 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1707705,
            range: '±4.37%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 38823,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7786,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7719,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16572,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10473,
            range: '±0.06%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12365,
            range: '±0.06%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 399198,
            range: '±5%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 355901,
            range: '±4.99%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 351962,
            range: '±4.7%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 326571,
            range: '±4.95%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 36817,
            range: '±1.21%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 408,
            range: '±3.53%',
            unit: 'ops/sec',
            extra: '65 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29044,
            range: '±0.35%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2162,
            range: '±1.5%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29826,
            range: '±2.17%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
        ],
      },
    ],
  },
}
