window.BENCHMARK_DATA = {
  lastUpdate: 1635694914259,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '50e08b6033543d922011208091b24b3f0987139f',
          message:
            'Release independent packages\n\nnapi@2.0.0-alpha.1\nnapi-build@1.1.1\nnapi-derive@2.0.0-alpha.1\nnapi-derive-backend@1.0.2\nnapi-sys@1.1.2\n\nGenerated by cargo-workspaces',
          timestamp: '2021-10-31T23:37:05+08:00',
          tree_id: '75284e6f45371490daeb3fdc1579fbcf826d4424',
          url: 'https://github.com/napi-rs/napi-rs/commit/50e08b6033543d922011208091b24b3f0987139f',
        },
        date: 1635694913066,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 47693021,
            range: '±1.59%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 781102514,
            range: '±0.84%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 16084193,
            range: '±0.65%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 785451510,
            range: '±0.72%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 301772,
            range: '±10.8%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 2084586,
            range: '±2.33%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 31425,
            range: '±1.08%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6400,
            range: '±1.01%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6435,
            range: '±0.7%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 15625,
            range: '±0.81%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8791,
            range: '±0.7%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10451,
            range: '±0.81%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 347294,
            range: '±5.38%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 302811,
            range: '±5.19%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 326958,
            range: '±4.92%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 302401,
            range: '±5.39%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 33886,
            range: '±2.33%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 352,
            range: '±3.81%',
            unit: 'ops/sec',
            extra: '62 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 25265,
            range: '±1.73%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1879,
            range: '±0.79%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Query#query * 1',
            value: 22769,
            range: '±2.15%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
        ],
      },
    ],
  },
}
