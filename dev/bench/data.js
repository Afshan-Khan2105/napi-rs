window.BENCHMARK_DATA = {
  lastUpdate: 1640104676064,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: 'fa0fe874489f45b8d1ece8eb3e58f7d17b23ccd2',
          message: 'Release independent packages\n\nnapi-build@1.2.1',
          timestamp: '2021-12-22T00:27:59+08:00',
          tree_id: '8647631b022b98b3150dcbb9ee0398820439e996',
          url: 'https://github.com/napi-rs/napi-rs/commit/fa0fe874489f45b8d1ece8eb3e58f7d17b23ccd2',
        },
        date: 1640104674300,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 59784754,
            range: '±0.34%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 810314986,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 20141314,
            range: '±0.69%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 807605659,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 359121,
            range: '±10.8%',
            unit: 'ops/sec',
            extra: '56 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1578092,
            range: '±4.32%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 40623,
            range: '±1.12%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 8781,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 8734,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 18798,
            range: '±0.62%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 12015,
            range: '±0.04%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 15029,
            range: '±0.04%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 441178,
            range: '±5.5%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 369938,
            range: '±5.37%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 398960,
            range: '±5.25%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 361129,
            range: '±5.33%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 37987,
            range: '±1.26%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 401,
            range: '±4.36%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 30290,
            range: '±1.05%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2183,
            range: '±2.35%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Query#query * 1',
            value: 31359,
            range: '±1%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
        ],
      },
    ],
  },
}
