window.BENCHMARK_DATA = {
  lastUpdate: 1642057516514,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '1768cf69eedac11330b7870333d9d270b3e1a2de',
          message: 'Release independent packages\n\nnapi@2.0.3',
          timestamp: '2022-01-13T14:52:19+08:00',
          tree_id: '59eeab07e89141d1fcbae07ce4a60ebfd3114631',
          url: 'https://github.com/napi-rs/napi-rs/commit/1768cf69eedac11330b7870333d9d270b3e1a2de',
        },
        date: 1642057514870,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 56230325,
            range: '±0.38%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 713021972,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 17966193,
            range: '±0.24%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 712312093,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 351823,
            range: '±10.42%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1732072,
            range: '±3.69%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 37223,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7405,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7407,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16127,
            range: '±0.73%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10190,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 12741,
            range: '±0.13%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 406362,
            range: '±5.28%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 359404,
            range: '±5.26%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 378139,
            range: '±4.81%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 334964,
            range: '±5.27%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 39592,
            range: '±1.17%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 425,
            range: '±3.23%',
            unit: 'ops/sec',
            extra: '68 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29642,
            range: '±0.5%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2232,
            range: '±1.58%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Query#query * 1',
            value: 30502,
            range: '±0.77%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
        ],
      },
    ],
  },
}
