window.BENCHMARK_DATA = {
  lastUpdate: 1638204154857,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: 'cb08c9f355b0bb6e0224c833b638c6f88fe82a03',
          message:
            'Release independent packages\n\nnapi-derive-backend@1.0.11\nnapi-derive@2.0.0-alpha.10',
          timestamp: '2021-11-30T00:31:43+08:00',
          tree_id: 'b108cc3dc8332e3830dc09e007623eec9a513664',
          url: 'https://github.com/napi-rs/napi-rs/commit/cb08c9f355b0bb6e0224c833b638c6f88fe82a03',
        },
        date: 1638204152967,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 48491564,
            range: '±2.34%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 801324217,
            range: '±2%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 16803932,
            range: '±1.08%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 837145476,
            range: '±1.01%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 338189,
            range: '±9.54%',
            unit: 'ops/sec',
            extra: '62 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1527110,
            range: '±4.09%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 33284,
            range: '±1.18%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6699,
            range: '±1.2%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6555,
            range: '±1.05%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 15502,
            range: '±1.39%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8219,
            range: '±1.08%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11898,
            range: '±0.8%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 369530,
            range: '±4.77%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 332313,
            range: '±4.83%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 355547,
            range: '±4.79%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 318961,
            range: '±4.76%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 28268,
            range: '±5.34%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 417,
            range: '±3.31%',
            unit: 'ops/sec',
            extra: '62 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 24098,
            range: '±6.98%',
            unit: 'ops/sec',
            extra: '70 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1802,
            range: '±1.36%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Query#query * 1',
            value: 21571,
            range: '±1.63%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
        ],
      },
    ],
  },
}
