window.BENCHMARK_DATA = {
  lastUpdate: 1638893059577,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '454711981bad00497b4d4d7d6caff0ab44323dca',
          message:
            'Release independent packages\n\nnapi-derive-backend@1.0.15\nnapi-derive@2.0.0-beta.3\nnapi@2.0.0-beta.4',
          timestamp: '2021-12-07T23:40:50+08:00',
          tree_id: '1a3573e08ab0a1c8df7622437d6449aa86b8fef0',
          url: 'https://github.com/napi-rs/napi-rs/commit/454711981bad00497b4d4d7d6caff0ab44323dca',
        },
        date: 1638893057535,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 42046639,
            range: '±0.82%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 635172586,
            range: '±0.87%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 14872616,
            range: '±0.91%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 629565565,
            range: '±1.11%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 282511,
            range: '±12.65%',
            unit: 'ops/sec',
            extra: '55 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1242278,
            range: '±5.41%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 31680,
            range: '±2.12%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 5738,
            range: '±1.82%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 5803,
            range: '±0.97%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13162,
            range: '±1.28%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8496,
            range: '±0.91%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11238,
            range: '±0.91%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 333321,
            range: '±5.68%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 291647,
            range: '±6.19%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 302105,
            range: '±5.84%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 266920,
            range: '±6.9%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 37484,
            range: '±2.79%',
            unit: 'ops/sec',
            extra: '72 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 387,
            range: '±3.91%',
            unit: 'ops/sec',
            extra: '63 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 24400,
            range: '±3.93%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1745,
            range: '±2.45%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Query#query * 1',
            value: 20390,
            range: '±3.51%',
            unit: 'ops/sec',
            extra: '74 samples',
          },
        ],
      },
    ],
  },
}
