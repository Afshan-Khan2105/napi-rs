window.BENCHMARK_DATA = {
  lastUpdate: 1640242697979,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: 'e904497b8c2929ea9efa29fe7e12d0d1ad2282de',
          message: 'Release independent packages\n\nnapi-derive@2.0.2',
          timestamp: '2021-12-23T14:47:41+08:00',
          tree_id: '905cd6ef83236cd49cbd5e4cbcd2d3e56b5dc9c4',
          url: 'https://github.com/napi-rs/napi-rs/commit/e904497b8c2929ea9efa29fe7e12d0d1ad2282de',
        },
        date: 1640242696267,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54455074,
            range: '±0.39%',
            unit: 'ops/sec',
            extra: '92 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 712579920,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 19077135,
            range: '±0.64%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 710762181,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 349876,
            range: '±10.31%',
            unit: 'ops/sec',
            extra: '59 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1684689,
            range: '±4.56%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 38702,
            range: '±0.08%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7884,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 7880,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 16447,
            range: '±0.74%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 10649,
            range: '±0.1%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 13302,
            range: '±0.06%',
            unit: 'ops/sec',
            extra: '98 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 391235,
            range: '±5.6%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 352981,
            range: '±5.33%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 351857,
            range: '±5.07%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 329285,
            range: '±5.44%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 36865,
            range: '±1.28%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 365,
            range: '±4.19%',
            unit: 'ops/sec',
            extra: '65 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29093,
            range: '±0.53%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2185,
            range: '±1.67%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29519,
            range: '±2.51%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
