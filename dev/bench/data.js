window.BENCHMARK_DATA = {
  lastUpdate: 1636132197563,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '178c1aacfbafe50d486f9323cf74bb25b6ca0cb4',
          message:
            'Merge pull request #834 from napi-rs/static-method\n\nfeat(napi): support static class factory',
          timestamp: '2021-11-06T01:05:40+08:00',
          tree_id: '8abd192590e2871e5e0046d0fed102010f89ae7d',
          url: 'https://github.com/napi-rs/napi-rs/commit/178c1aacfbafe50d486f9323cf74bb25b6ca0cb4',
        },
        date: 1636132195871,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 54518858,
            range: '±0.15%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 713214180,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 18192132,
            range: '±0.85%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 724036345,
            range: '±0.76%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 338760,
            range: '±11.19%',
            unit: 'ops/sec',
            extra: '67 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1916767,
            range: '±4.73%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 35793,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '94 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 7994,
            range: '±0.17%',
            unit: 'ops/sec',
            extra: '99 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 8244,
            range: '±1.26%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 19361,
            range: '±0.14%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 11653,
            range: '±0.03%',
            unit: 'ops/sec',
            extra: '100 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 14447,
            range: '±0.04%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 429307,
            range: '±5.47%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 355612,
            range: '±5.53%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 372840,
            range: '±5.2%',
            unit: 'ops/sec',
            extra: '78 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 342506,
            range: '±5.5%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 37374,
            range: '±1.68%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 366,
            range: '±4.28%',
            unit: 'ops/sec',
            extra: '61 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 29739,
            range: '±1.55%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Query#query * 100',
            value: 2161,
            range: '±2.39%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Query#query * 1',
            value: 29266,
            range: '±0.54%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
        ],
      },
    ],
  },
}
