window.BENCHMARK_DATA = {
  lastUpdate: 1640138218973,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: '9055fcd0c9ede06c01f377d619f480c40dfd8c9a',
          message:
            'Merge pull request #961 from napi-rs/fix/compile-issue-without-compat-mode\n\nfix(napi): compile issue without compat mode',
          timestamp: '2021-12-22T09:49:55+08:00',
          tree_id: 'fd7b83a1967495008ec303ba5fb9843779057489',
          url: 'https://github.com/napi-rs/napi-rs/commit/9055fcd0c9ede06c01f377d619f480c40dfd8c9a',
        },
        date: 1640138217172,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 44206486,
            range: '±0.7%',
            unit: 'ops/sec',
            extra: '88 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 722678293,
            range: '±0.93%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 15073573,
            range: '±1.11%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 764403426,
            range: '±1.09%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 315838,
            range: '±8.9%',
            unit: 'ops/sec',
            extra: '53 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1336327,
            range: '±5.9%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 34861,
            range: '±0.97%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 5999,
            range: '±0.64%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6012,
            range: '±0.77%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13970,
            range: '±1.4%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8739,
            range: '±1.13%',
            unit: 'ops/sec',
            extra: '89 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11231,
            range: '±0.84%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 350822,
            range: '±5.12%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 316353,
            range: '±4.79%',
            unit: 'ops/sec',
            extra: '73 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 320536,
            range: '±4.73%',
            unit: 'ops/sec',
            extra: '69 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 292573,
            range: '±5.18%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 31758,
            range: '±2.02%',
            unit: 'ops/sec',
            extra: '77 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 377,
            range: '±3.07%',
            unit: 'ops/sec',
            extra: '63 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 22776,
            range: '±2.15%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1748,
            range: '±1.01%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Query#query * 1',
            value: 20878,
            range: '±2.02%',
            unit: 'ops/sec',
            extra: '84 samples',
          },
        ],
      },
    ],
  },
}
