window.BENCHMARK_DATA = {
  lastUpdate: 1639988686982,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'noreply@github.com',
            name: 'GitHub',
            username: 'web-flow',
          },
          distinct: true,
          id: 'a695c9724fa58c54d94573d1ef07f5c12aa91d32',
          message:
            'Merge pull request #951 from napi-rs/multi-impl-gen\n\nfix(napi-derive): codegen bug when multi impl on same file',
          timestamp: '2021-12-20T16:17:04+08:00',
          tree_id: 'c2c9b15b4bd0d123b43b8b88e0e2a5505ae0b829',
          url: 'https://github.com/napi-rs/napi-rs/commit/a695c9724fa58c54d94573d1ef07f5c12aa91d32',
        },
        date: 1639988685544,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 45860288,
            range: '±1.07%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 618376991,
            range: '±1.41%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 16573879,
            range: '±1.28%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 643851032,
            range: '±1.04%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 333740,
            range: '±9.34%',
            unit: 'ops/sec',
            extra: '60 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1585026,
            range: '±4.88%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 33563,
            range: '±0.92%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6659,
            range: '±1.22%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6688,
            range: '±1.76%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13835,
            range: '±1.26%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8927,
            range: '±1.3%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 10291,
            range: '±0.94%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 346029,
            range: '±5.13%',
            unit: 'ops/sec',
            extra: '68 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 298306,
            range: '±5.37%',
            unit: 'ops/sec',
            extra: '76 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 316526,
            range: '±5.3%',
            unit: 'ops/sec',
            extra: '75 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 298242,
            range: '±4.99%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 30125,
            range: '±1.56%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 355,
            range: '±2.97%',
            unit: 'ops/sec',
            extra: '68 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 24189,
            range: '±5.21%',
            unit: 'ops/sec',
            extra: '83 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1905,
            range: '±1.28%',
            unit: 'ops/sec',
            extra: '85 samples',
          },
          {
            name: 'Query#query * 1',
            value: 24415,
            range: '±3.15%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
        ],
      },
    ],
  },
}
