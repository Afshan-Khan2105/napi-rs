window.BENCHMARK_DATA = {
  lastUpdate: 1638523165229,
  repoUrl: 'https://github.com/napi-rs/napi-rs',
  entries: {
    Benchmark: [
      {
        commit: {
          author: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          committer: {
            email: 'lynweklm@gmail.com',
            name: 'LongYinan',
            username: 'Brooooooklyn',
          },
          distinct: true,
          id: '8d6997f61e8657e75a885a642075b0702889550e',
          message: 'Release independent packages\n\nnapi@2.0.0-beta.2',
          timestamp: '2021-12-03T17:06:24+08:00',
          tree_id: 'c35d825c800e00b0cd9c821831f55d29bc9b55e1',
          url: 'https://github.com/napi-rs/napi-rs/commit/8d6997f61e8657e75a885a642075b0702889550e',
        },
        date: 1638523163835,
        tool: 'benchmarkjs',
        benches: [
          {
            name: 'noop#napi-rs',
            value: 45182804,
            range: '±0.38%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'noop#JavaScript',
            value: 591139439,
            range: '±0.16%',
            unit: 'ops/sec',
            extra: '96 samples',
          },
          {
            name: 'Plus number#napi-rs',
            value: 15710419,
            range: '±0.28%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Plus number#JavaScript',
            value: 589906521,
            range: '±0.17%',
            unit: 'ops/sec',
            extra: '93 samples',
          },
          {
            name: 'Create buffer#napi-rs',
            value: 327454,
            range: '±9.6%',
            unit: 'ops/sec',
            extra: '59 samples',
          },
          {
            name: 'Create buffer#JavaScript',
            value: 1530351,
            range: '±4.17%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'createArray#createArrayJson',
            value: 32736,
            range: '±0.08%',
            unit: 'ops/sec',
            extra: '91 samples',
          },
          {
            name: 'createArray#create array for loop',
            value: 6395,
            range: '±0.12%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'createArray#create array with serde trait',
            value: 6378,
            range: '±0.11%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array from json string',
            value: 13908,
            range: '±0.64%',
            unit: 'ops/sec',
            extra: '95 samples',
          },
          {
            name: 'getArrayFromJs#get array from serde',
            value: 8833,
            range: '±0.07%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'getArrayFromJs#get array with for loop',
            value: 11078,
            range: '±0.09%',
            unit: 'ops/sec',
            extra: '97 samples',
          },
          {
            name: 'Get Set property#Get Set from native#u32',
            value: 351899,
            range: '±4.89%',
            unit: 'ops/sec',
            extra: '79 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#u32',
            value: 303583,
            range: '±4.76%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Get Set property#Get Set from native#string',
            value: 331387,
            range: '±4.73%',
            unit: 'ops/sec',
            extra: '80 samples',
          },
          {
            name: 'Get Set property#Get Set from JavaScript#string',
            value: 291455,
            range: '±4.73%',
            unit: 'ops/sec',
            extra: '82 samples',
          },
          {
            name: 'Async task#spawn task',
            value: 29194,
            range: '±1.03%',
            unit: 'ops/sec',
            extra: '81 samples',
          },
          {
            name: 'Async task#ThreadSafeFunction',
            value: 339,
            range: '±3.6%',
            unit: 'ops/sec',
            extra: '66 samples',
          },
          {
            name: 'Async task#Tokio future to Promise',
            value: 24186,
            range: '±0.54%',
            unit: 'ops/sec',
            extra: '87 samples',
          },
          {
            name: 'Query#query * 100',
            value: 1742,
            range: '±1.48%',
            unit: 'ops/sec',
            extra: '90 samples',
          },
          {
            name: 'Query#query * 1',
            value: 25065,
            range: '±2.04%',
            unit: 'ops/sec',
            extra: '86 samples',
          },
        ],
      },
    ],
  },
}
